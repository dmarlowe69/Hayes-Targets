[shared-]
	mark=cv "D:\C\CONTROL\TALK\PACKET.c" 318 1 'E "PACKET.c"!.318
	version=2
	pmark="D:\AMERICAN\TLXPROD\TLXPROD.S" 2762 3
	project="D:\AMERICAN\TLXPROD\tlxprod.mak"
	buildmode=2
[edit-]
	srch=VERSION
	fSrchRe=0
	rpl=ALT
	src=PROD
	fRplRe=22016
	file="D:\AMERICAN\TLXPROD\TLXPROD.S" 2717 1 2762 3
	file="D:\AMERICAN\TLXPROD\TLXPROD.PRN" 1 1 1 1
[pwbed]
	screen=25 80
	winstyle=7
	wnd=C 2 1 24 80
[pwb]
	screen=50 80
	winstyle=7
	wnd=C 2 1 49 80
[environ]
	INCLUDE=C:\C\INCLUDE
	LIB=C:\C\LIB
	HELPFILES=C:\C\HELP\*.HLP
[build]
	build: macro DEBUG "0"
	build: macro PWBRMAKE "pwbrmake"
	build: macro NMAKEBSC1 "set"
	build: macro NMAKEBSC2 "nmake"
	build: macro CC "cl"
	build: macro CFLAGS_G "/BATCH"
	build: macro CFLAGS_D "/Gi$(PROJ).mdt /Zi /Od"
	build: macro CFLAGS_R "/Ot"
	build: macro MAPFILE_D "NUL"
	build: macro MAPFILE_R "NUL"
	build: macro LFLAGS_G "/NOI /BATCH"
	build: macro LFLAGS_D "/CO /FAR /PACKC"
	build: macro LFLAGS_R "/EXE /FAR /PACKC"
	build: macro LINKER "link"
	build: macro ILINK "ilink"
	build: macro LRF "echo > NUL"
	build: all $(PROJ).exe
	build: target $(PROJ).bsc pwbrmake
	build: target $(PROJ).exe lrf_exe link_exe
	build: inference .c.sbr cc_c_sbr
	build: inference .asm.sbr asm_asm_sbr
	build: inference .c.obj cc_c_obj
	build: command pwbrmake "$(PWBRMAKE) @<<\n$(BRFLAGS) $(SBRS)\n<<"
	build: command nmakebsc1 "$(NMAKEBSC1) MAKEFLAGS="
	build: command nmakebsc2 "$(NMAKEBSC2) $(NMFLAGS) -f $(PROJFILE) $(PROJ).bsc"
	build: release command cc_c_sbr "$(CC) /Zs $(CFLAGS_G) $(CFLAGS_R) /FR$@ $<"
	build: debug command cc_c_sbr "$(CC) /Zs $(CFLAGS_G) $(CFLAGS_D) /FR$@ $<"
	build: release command asm_asm_sbr "$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_R) /FR$@ $<"
	build: debug command asm_asm_sbr "$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_D) /FR$@ $<"
	build: release command cc_c_obj "$(CC) /c $(CFLAGS_G) $(CFLAGS_R) /Fo$@ $<"
	build: debug command cc_c_obj "$(CC) /c $(CFLAGS_G) $(CFLAGS_D) /Fo$@ $<"
	build: release command lrf_exe "$(LRF) @<<$(PROJ).lrf\n$(RT_OBJS: = +^\n) $(OBJS: = +^\n)\n$@\n$(MAPFILE_R)\n$(LLIBS_G: = +^\n) +\n$(LLIBS_R: = +^\n) +\n$(LIBS: = +^\n)\n$(DEF_FILE) $(LFLAGS_G) $(LFLAGS_R);\n<<"
	build: debug command lrf_exe "$(LRF) @<<$(PROJ).lrf\n$(RT_OBJS: = +^\n) $(OBJS: = +^\n)\n$@\n$(MAPFILE_D)\n$(LLIBS_G: = +^\n) +\n$(LLIBS_D: = +^\n) +\n$(LIBS: = +^\n)\n$(DEF_FILE) $(LFLAGS_G) $(LFLAGS_D);\n<<"
	build: command link_exe "$(LINKER) @$(PROJ).lrf"
	build: command run "$(PROJ).exe $(RUNFLAGS)"
	build: command debug "CV $(CVFLAGS) $(PROJ).exe $(RUNFLAGS)"
	build: include dependencies
	build: include no system
	build: include .c "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\"" case
	build: include .c "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" case system
	build: include .h "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\"" case
	build: include .h "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" case system
	build: include .rc "^[ \t]*rcinclude[ \t]+\\([^ \t]+\\)"
	build: include .rc "^[ \t]*#[ \t]*include[ \t]*\"[ \t]*\\(\\:p\\)[ \t]*\""
	build: include .rc "^[ \t]*#[ \t]*include[ \t]*<[ \t]*\\(\\:p\\)[ \t]*>" system
	build: include .asm "^[ \t]*include[ \t]+\\([^ \t]+\\)"
	build: include .inc "^[ \t]*include[ \t]+\\([^ \t]+\\)"
	build: message "^SYS[0-9][0-9][0-9][0-9]:\\:b"
	build: message "^NET[0-9][0-9][0-9][0-9]:\\:b"
	build: message "^\\(\\{\\:p\\!<[^>]*>\\}\\) \\([0-9]+\\) \\([0-9]+\\)[ ]*:" file line col
	build: message "^\\(\\:p\\):\\([0-9]+\\):" file line
	build: message "^[^(]+(\\(\\:p\\)) : error L[0-9]+[ ]*: '_*\\([^']+\\)' : unresolved external" file token
	build: message "^[^(]+(\\(\\:p\\)) : [^L]+L[124]" file
	build: message "^LINK [^L]+L[124]"
	build: message "^ILINK : [^L]+L[124]"
	build: message "^\\(\\:p\\)(\\(\\:z\\))[ ]*: [^U]+U[124]" file line
	build: message "^NMAKE : [^U]+U[124]"
	build: message "^\\:p : [^U]+U[124]\\:d\\:d\\:d"
	build: message "^pwbrmake: [^U]+U[124]"
	build: message "^\\(\\:p\\)(\\(\\:z\\)) : [^C]+C[124]" file line
	build: message "^[^C]+C[124][0-9]+: "
	build: message "^[^D]+D[124][0-9]+ : "
	build: message "^BIND : [^U]+U[124]"
	build: message "^\\(\\:p\\)(\\(\\:z\\)) RC:" file line
	build: message "^RC: error"
	build: message "^\\(\\:p\\)(\\([0-9]+\\))[ \t]*:[ \t]*[^A]+A[12456]" file line
	build: message "^\\(\\:p\\)(\\(\\:z\\)) : [^H]+HI[124]" file line
	build: message "^[^H]+HI[124][0-9]+: "
	build: language None

[debug-]
	target="d:\c\control\talk\talk.exe"
[cv]
	wndstate=0 1 0 2 0 0 0 0 0 1 254
	tilestate=1 24 0 80 0 0 0 0 0 5 0 0 0 0 18 0 0 254
	command=use auto
	command=n10
	command=s1
	command=s&
	command=oc+
	command=of+
	command=o3-
